*delve.txt*	Vim/Neovim plugin of delve that can debug Go programs

Author: skanehira <sho19921005@gmail.com>
License : MIT license  {{{
    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:
    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}}}

==============================================================================
CONTENTS					*delve-contents*

INTRODUCTION			|delve-introduction|
USAGE				|delve-usage|
INTERFACE			|delve-interface|
  COMMANDS			  |delve-commands|
  VARIABLES			  |delve-variables|
  BUFFER			  |delve-buffers|
  KEY-MAPPINGS			  |delve-key-mappings|
  FUNCTIONS			  |delve-functions|
TODO				|delve-todo|
CHANGELOG			|delve-changelog|


==============================================================================
INTRODUCTION					*delve-introduction*

*denops-delve.vim* is a Vim/Neovim plugin of delve that can debug Go programs.

Latest version:
https://github.com/skanehira/denops-delve.vim


==============================================================================
USAGE						*delve-usage*

==============================================================================
INTERFACE					*delve-interface*

------------------------------------------------------------------------------
VARIABLES					*delve-variables*

------------------------------------------------------------------------------
COMMANDS					*delve-commands*

:DlvStart [{file}]				*:DlvStart*
  Start delve server.
  If you are doesn't specify {file},
  current file name would be used.

:DlvStartWithEnv {envfile} [{file}]		*:DlvStartWithEnv*
  Load specified {envfile} to set environment
  and start delve.
  If you are doesn't specify {file},
  current file name would be used.

:DlvBreakpoint					*:DlvBreakpoint*
  Set a breakpoint to current line.

:DlvBreakpointClear				*:DlvBreakpointClear*
  Clear a breakpoint at current line.

:DlvStop					*:DlvStop*
  Stop delve server.
  If breakpoints doesn't clear before stop,
  them would apply when delve server started.

:DlvContinue					*:DlvContinue*
  Run until breakpoint or program termination.

:DlvNext					*:DlvNext*
  Step over to next source line.

:DlvStep					*:DlvStep*
  Single step through program.

:DlvStepOut					*:DlvStepOut*
  Step out of the current function.

:DlvPrint {variable}				*:DlvPrint*
  Evaluate an expression of {valirbale}.

:DlvOpenLog					*:DlvOpenLog*
  Watching delve server log.
  This command just run `tail -f` in Vim terminal.
  So you have to install `tail` before use this.

:DlvBreakpoints					*:DlvBreakpoints*
  Open list of breakpoints in *quickfix*

:DlvSet	{variable}={value}			*:DlvSet*
  Changes the {value} of a {variable}.

------------------------------------------------------------------------------
BUFFER							*delve-buffers*


------------------------------------------------------------------------------
KEY-MAPPINGS					*delve-key-mappings*

<Plug>(dlv-breakpoint)				*<Plug>(dlv-breakpoint)*
  Execute *:DlvBreakpoint*

<Plug>(dlv-breakpoints)				*<Plug>(dlv-breakpoints)*
  Execute *:DlvBreakpoints*

<Plug>(dlv-breakpoint-clear)			*<Plug>(dlv-breakpoint-clear)*
  Execute *:DlvBreakpointClear*

<Plug>(dlv-continue)				*<Plug>(dlv-continue)*
  Execute *:DlvContinue*

<Plug>(dlv-next)				*<Plug>(dlv-next)*
  Execute *:DlvContinue*

<Plug>(dlv-step)				*<Plug>(dlv-step)*
  Execute *:DlvStop*

<Plug>(dlv-stepout)				*<Plug>(dlv-stepout)*
  Execute *:DlvStepOut*

<Plug>(dlv-print)				*<Plug>(dlv-print)*
  Execute *:DlvPrint*

<Plug>(dlv-stop)				*<Plug>(dlv-stop)*
  Execute *:DlvStop*

------------------------------------------------------------------------------
FUNCTIONS					*delve-functions*


==============================================================================
TODO						*delve-todo*



==============================================================================
CHANGELOG					*delve-changelog*


==============================================================================
vim:tw=85:ts=8:ft=help:norl:noet:fen:
